diff --git a/node_modules/react-native-passkey/ios/Passkey.swift b/node_modules/react-native-passkey/ios/Passkey.swift
index bcc07c2..c2f7196 100644
--- a/node_modules/react-native-passkey/ios/Passkey.swift
+++ b/node_modules/react-native-passkey/ios/Passkey.swift
@@ -82,18 +82,15 @@ class Passkey: NSObject {
     if #available(iOS 15.0, *) {
       let authController: ASAuthorizationController;
 
-      // Check if authentication should proceed with a security key
-      if (securityKey) {
-        // Create a new assertion request with security key
-        let securityKeyProvider = ASAuthorizationSecurityKeyPublicKeyCredentialProvider(relyingPartyIdentifier: identifier);
-        let authRequest = securityKeyProvider.createCredentialAssertionRequest(challenge: challengeData);
-        authController = ASAuthorizationController(authorizationRequests: [authRequest]);
-      } else {
-        // Create a new assertion request without security key
-        let platformProvider = ASAuthorizationPlatformPublicKeyCredentialProvider(relyingPartyIdentifier: identifier);
-        let authRequest = platformProvider.createCredentialAssertionRequest(challenge: challengeData);
-        authController = ASAuthorizationController(authorizationRequests: [authRequest]);
-      }
+      // Create a new assertion request with security key
+      let securityKeyProvider = ASAuthorizationSecurityKeyPublicKeyCredentialProvider(relyingPartyIdentifier: identifier);
+      let securityKeyAuthRequest = securityKeyProvider.createCredentialAssertionRequest(challenge: challengeData);
+
+      // Create a new assertion request without security key
+      let platformProvider = ASAuthorizationPlatformPublicKeyCredentialProvider(relyingPartyIdentifier: identifier);
+      let platformAuthRequest = platformProvider.createCredentialAssertionRequest(challenge: challengeData);
+
+      authController = ASAuthorizationController(authorizationRequests: [platformAuthRequest, securityKeyAuthRequest]);
 
       // Set up a PasskeyDelegate instance with a callback function
       self.passKeyDelegate = PasskeyDelegate { error, result in
