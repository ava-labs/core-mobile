diff --git a/android/src/main/java/com/gantix/JailMonkey/JailMonkeyModule.java b/android/src/main/java/com/gantix/JailMonkey/JailMonkeyModule.java
index 018d7051a57a2250c738e018ba8e1518d1b9525a..e89a135c10edc50174315c5cf0a3c9871fe65e6a 100644
--- a/android/src/main/java/com/gantix/JailMonkey/JailMonkeyModule.java
+++ b/android/src/main/java/com/gantix/JailMonkey/JailMonkeyModule.java
@@ -74,11 +74,7 @@ public class JailMonkeyModule extends ReactContextBaseJavaModule {
         final Map<String, Object> constants = new HashMap<>();
 
         constants.put("isJailBroken", rootedCheck.isJailBroken());
-        constants.put("rootedDetectionMethods", rootedCheck.getResultByDetectionMethod());
-        constants.put("hookDetected", hookDetected(context));
-        constants.put("canMockLocation", isMockLocationOn(context));
-        constants.put("isOnExternalStorage", isOnExternalStorage(context));
-        constants.put("AdbEnabled", AdbEnabled(context));
         return constants;
     }
 }
+
diff --git a/android/src/main/java/com/gantix/JailMonkey/Rooted/RootedCheck.java b/android/src/main/java/com/gantix/JailMonkey/Rooted/RootedCheck.java
index bf75f27fd11293205bf6d58de4f8069ea0a155fe..2151858623d5be0f58aa752a1d8b16bafc133dd0 100644
--- a/android/src/main/java/com/gantix/JailMonkey/Rooted/RootedCheck.java
+++ b/android/src/main/java/com/gantix/JailMonkey/Rooted/RootedCheck.java
@@ -4,6 +4,7 @@ import android.content.Context;
 import com.scottyab.rootbeer.RootBeer;
 import java.util.HashMap;
 import java.util.Map;
+import java.util.concurrent.CountDownLatch;
 
 public class RootedCheck {
     private static boolean checkWithJailMonkeyMethod() {
@@ -17,12 +18,23 @@ public class RootedCheck {
         return check.checkRooted();
     }
 
-    private final boolean jailMonkeyResult;
-    private final RootBeerResults rootBeerResults;
+    private static boolean jailMonkeyResult;
+    private static RootBeerResults rootBeerResults;
+    private static CountDownLatch latch = new CountDownLatch(1);
+    public static void precompute(Context context) {
+        new Thread(() -> {
+            jailMonkeyResult = checkWithJailMonkeyMethod();
+            rootBeerResults = new RootBeerResults(context);
+            latch.countDown();
+        }).start();
+    }
 
     public RootedCheck(Context context) {
-        jailMonkeyResult = checkWithJailMonkeyMethod();
-        rootBeerResults = new RootBeerResults(context);
+        try {
+            latch.await();
+        } catch (InterruptedException e) {
+            throw new RuntimeException(e);
+        }
     }
 
     public boolean isJailBroken() {
@@ -87,3 +99,4 @@ public class RootedCheck {
         }
     }
 }
+
diff --git a/package.json b/package.json
index 31d682cd52b478e9de01b09838f19975a87352d1..0049a8b91762f6208d3b2e6256895da6c034b727 100644
--- a/package.json
+++ b/package.json
@@ -61,5 +61,35 @@
     "ts-check": "npx tsc jailmonkey.d.ts --noEmit"
   },
   "typings": "./jailmonkey.d.ts",
-  "version": "2.8.0"
+  "version": "2.8.0",
+  "react-native": {
+    "zlib": "browserify-zlib",
+    "http": "@tradle/react-native-http",
+    "https": "https-browserify",
+    "os": "react-native-os",
+    "path": "path-browserify",
+    "fs": "react-native-level-fs",
+    "_stream_transform": "readable-stream/transform",
+    "_stream_readable": "readable-stream/readable",
+    "_stream_writable": "readable-stream/writable",
+    "_stream_duplex": "readable-stream/duplex",
+    "_stream_passthrough": "readable-stream/passthrough",
+    "stream": "stream-browserify",
+    "vm": "vm-browserify"
+  },
+  "browser": {
+    "zlib": "browserify-zlib",
+    "http": "@tradle/react-native-http",
+    "https": "https-browserify",
+    "os": "react-native-os",
+    "path": "path-browserify",
+    "fs": "react-native-level-fs",
+    "_stream_transform": "readable-stream/transform",
+    "_stream_readable": "readable-stream/readable",
+    "_stream_writable": "readable-stream/writable",
+    "_stream_duplex": "readable-stream/duplex",
+    "_stream_passthrough": "readable-stream/passthrough",
+    "stream": "stream-browserify",
+    "vm": "vm-browserify"
+  }
 }
